image: composer:2.5.5

definitions:
  services:
    pgsql:
      image: postgres:13-alpine
      environment:
        POSTGRES_DB: $DB_DATABASE
        POSTGRES_USER: $DB_USERNAME
        POSTGRES_PASSWORD: $DB_PASSWORD
  steps:
    - step: &testin-app
        name: Testing app
        script:
          - pecl install php8.2-xdebug && echo "zend_extension=$(find /usr/local/lib/php/20200930/ -name xdebug.so)" > /etc/php/8.2/cli/php.ini
          - echo "xdebug.mode = debug,coverage" >> /etc/php/8.2/cli/php.ini
          - echo "xdebug.discover_client_host = true" >> /etc/php/8.2/cli/php.ini
          - echo "xdebug.client_host = host.docker.internal" >> /etc/php/8.2/cli/php
          - echo "xdebug.client_port = ${XDEBUG_PORT}" >> /etc/php/8.2/cli/php.ini
          - ln -f -s .env.testing .env
          - composer install --ignore-platform-reqs
          - php artisan key:generate
          - php artisan jwt:secret
          - php artisan test -p --coverage-text --configuration phpunit.xml --min=$COVERAGE_MIN
        services:
          - pgsql
        caches:
          - composer
    - step: &syntax-test
        name: syntax test
        script:
          - ln -f -s .env.example .env
          - composer install --ignore-platform-reqs
          - ./vendor/bin/pint --test
          ## - ./vendor/bin/phpcs
          ## - ./vendor/bin/pstan
        caches:
          - composer
    - step: &deploy-forge
          name: Run Forge Quik Deployment
          deployment: Test
          script:
            - curl -vk https://forge.laravel.com/servers/$SERVER_ID/sites/$SERVER_SITE/deploy/http?token=$DEPLOY_TOKEN

pipelines:
  default:
      - stage:
          name: Test app
          steps:
              - step: *testin-app
              - step: *syntax-test
  branches:
    master:
      - stage:
          name: Test app
          steps:
              - step: *testin-app
              - step: *syntax-test
      - step:
          <<: *deploy-forge
          deployment: Production
      - step:
          name: Test success deployment
          deployment: staging
          script:
            - echo "todo: test success deployment"
    v100:
      - stage:
          name: Test app
          steps:
              - step: *testin-app
              - step: *syntax-test
      - step:
          <<: *deploy-forge
          deployment: V100
    staging:
      - stage:
          name: Test app
          steps:
              - step: *testin-app
              - step: *syntax-test
      - step:
          <<: *deploy-forge
          deployment: Staging
