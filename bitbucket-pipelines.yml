image: php:8.2.9

definitions:
  caches:
    vendor: vendor
  services:
    pgsql:
      image: postgres:13-alpine
      environment:
        POSTGRES_DB: $DB_DATABASE
        POSTGRES_USER: $DB_USERNAME
        POSTGRES_PASSWORD: $DB_PASSWORD
  steps:
    - build: &build
        name: Build app
        caches:
          - composer
          - vendor
        script:
          - ln -f -s .env.example .env
          - apt-get update && apt-get install -y libpq-dev gnupg gosu curl zip unzip supervisor libcap2-bin libpng-dev dnsutils libcurl4-openssl-dev libmcrypt-dev libzip-dev
          - curl -sLS https://getcomposer.org/installer | php -- --install-dir=/usr/bin/ --filename=composer
          - docker-php-ext-install pgsql gd curl zip bcmath intl
          - XDEBUG_MODE=debug,coverage
          - php -v
          - composer install --no-interaction --prefer-dist
    - step: &testin-app
        name: Testing app
        caches:
          - composer
          - vendor
        script:
          - ln -f -s .env.example .env
          - XDEBUG_MODE=debug,coverage
          - ./vendor/bin/phpunit --log-junit ./test-reports/phpunit.junit.xml --coverage-clover ./test-reports/phpunit.coverage.xml
        services:
          - pgsql
    - step: &syntax-test
        name: syntax test
        caches:
          - composer
          - vendor
        script:
          - ln -f -s .env.example .env
          - ./vendor/bin/pint --test
          ## - ./vendor/bin/phpcs
          ## - ./vendor/bin/pstan
    - step: &deploy-forge
          name: Run Forge Quik Deployment
          deployment: Test
          script:
            - curl -vk https://forge.laravel.com/servers/$SERVER_ID/sites/$SERVER_SITE/deploy/http?token=$DEPLOY_TOKEN

pipelines:
  default:
      - stage:
          name: Test app
          steps:
              - step: *build
              - step: *testin-app
              - step: *syntax-test
  branches:
    master:
      - stage:
          name: Test app
          steps:
              - step: *testin-app
              - step: *syntax-test
      - step:
          <<: *deploy-forge
          deployment: Production
      - step:
          name: Test success deployment
          deployment: staging
          script:
            - echo "todo: test success deployment"
    v100:
      - stage:
          name: Test app
          steps:
              - step: *testin-app
              - step: *syntax-test
      - step:
          <<: *deploy-forge
          deployment: V100
    staging:
      - stage:
          name: Test app
          steps:
              - step: *testin-app
              - step: *syntax-test
      - step:
          <<: *deploy-forge
          deployment: Staging
